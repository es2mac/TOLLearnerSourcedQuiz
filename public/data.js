const QUESTIONS_DATA = [[{"qid": "Q5", "type": "select-all", "questionText": "In a math class activity, students are trying to invent the formula to calculate the area of a square while also contrasting it with calculating the area of a rectangle and triangle. Students are given the right answer after the invent and contrast activity. What are the likely benefits student would get out of this activity of inventing and contrasting cases?", "choices": [{"cid": "c", "text": "They create and test their own hypothesis, which helps with far-transfer."}, {"cid": "d", "text": "invented solutions can help students understand"}, {"cid": "b", "text": "Benefits of this methods are (1) delayed recall, students remember the information better for longer and will be able to computer areas for longer (2) pressure transfer task/contextualizing knowledge, more students will use the right formula for area problems after the activity."}, {"cid": "a", "text": "increased attention Generate their own knowledge Summarizing"}], "correctChoices": ["a", "b"], "correctFeedback": "Correct.", "incorrectFeedback": "Incorrect."}, {"qid": "Q5", "type": "multiple-choice", "questionText": "In a math class activity, students are trying to invent the formula to calculate the area of a square while also contrasting it with calculating the area of a rectangle and triangle. Students are given the right answer after the invent and contrast activity. What are the likely benefits student would get out of this activity of inventing and contrasting cases?", "choices": [{"cid": "d", "text": "Students will have a deeper understanding of the concept of area in general. They will be better at calculate areas in transfer tasks, even after a period of delay."}, {"cid": "a", "text": "increased attention Generate their own knowledge Summarizing"}, {"cid": "b", "text": "They create and test their own hypothesis, which helps with far-transfer."}, {"cid": "c", "text": "invented solutions can help students understand"}], "correctChoice": ["a"], "correctFeedback": "Correct.", "incorrectFeedback": "Incorrect."}], [{"qid": "Q6", "type": "select-all", "questionText": "The \u201cStable-pairing\u201d design pattern suggests that when learners need to be paired for multiple peer tutoring sessions, for larger learning gains learners overall, they should be paired such that over long periods of time (e.g. a month), they have the same partner. The \u201cMax-welfare\u201d design pattern suggests that when learners need to be paired for peer-tutoring over multiple sessions, for maximizing the learning gain in each session they should be paired with the partner they are most likely to learn from in that session. If you\u2019re designing a peer tutoring iPhone app where learners can participate in tutoring over any duration, how would you decide which pattern to use?", "choices": [{"cid": "a", "text": "Since we are in online media, I would pick max-welfare. The reason is that if learners are not required to come to the same classroom by the same time, then it is very hard to ensure that learners in single pair are able to synchronise. Given that online media often assumes self-paced learning it might also be an issue (i.e. I decide to take vacation and my partner should wait till I return). In contrast, max-welfare makes decision for each session and can pick partner from those who are currently online which is very convenient."}, {"cid": "b", "text": "One option could be to differentiate the pairing algorithm based on the time frame for the use case. So if a given user signals that they need only a few sessions, we could use Max-Welfare, but if they will be going back again and again, we use Stable-Pairing"}, {"cid": "d", "text": "I would analyze which design pattern matches users' needs when using a smartphone, using properties that are unique to a smartphone environment. One characteristic that the digital tool has is using algorithm to make proper pairs. For that reason, I would choose to use the \"Max-welfare\" pattern over the \"stable-pairing\" pattern."}, {"cid": "c", "text": "Choose the max-welfare pattern because max-welfare would choose the stable-matching pairing if that were indeed more optimal\u3002"}], "correctChoices": ["a", "b"], "correctFeedback": "Correct.", "incorrectFeedback": "Incorrect."}, {"qid": "Q6", "type": "select-all", "questionText": "The \u201cStable-pairing\u201d design pattern suggests that when learners need to be paired for multiple peer tutoring sessions, for larger learning gains learners overall, they should be paired such that over long periods of time (e.g. a month), they have the same partner. The \u201cMax-welfare\u201d design pattern suggests that when learners need to be paired for peer-tutoring over multiple sessions, for maximizing the learning gain in each session they should be paired with the partner they are most likely to learn from in that session. If you\u2019re designing a peer tutoring iPhone app where learners can participate in tutoring over any duration, how would you decide which pattern to use?", "choices": [{"cid": "c", "text": "Max-welfare, because people are flowing fast, you cannot tell who will still be here tomorrow, so it's hard to form stable patterns. Rather, pair people with max gain will be more beneficial."}, {"cid": "d", "text": "Since design patterns don't provide a principle to guide us choosing better practices, I suggest trying the easier pattern to implement first (e.g. stable-pairing), then move to max-welfare if results are inadequate"}, {"cid": "a", "text": "Given that there are many parameters to be considered here, I would test both design patterns against each other in a constrained environment. If the resources were not available to conduct testing in such a manner, I would choose the max-welfare design pattern because it has greater flexibility that the stable pattern, if it doesn't work well I would switch."}, {"cid": "b", "text": "I might begin with a single question that asks users, given a particular tutoring topic, how long they plan to participate with options of 1) once, 2) less than a month, 3) a month or more. Then I would choose max welfare for options 1 and 2 and stable pairing for option 3. If the option 1 or 2 users began to stay with the app longer, it would switch them to stable pairing."}], "correctChoices": ["a", "b"], "correctFeedback": "Correct.", "incorrectFeedback": "Incorrect."}, {"qid": "Q6", "type": "multiple-choice", "questionText": "The \u201cStable-pairing\u201d design pattern suggests that when learners need to be paired for multiple peer tutoring sessions, for larger learning gains learners overall, they should be paired such that over long periods of time (e.g. a month), they have the same partner. The \u201cMax-welfare\u201d design pattern suggests that when learners need to be paired for peer-tutoring over multiple sessions, for maximizing the learning gain in each session they should be paired with the partner they are most likely to learn from in that session. If you\u2019re designing a peer tutoring iPhone app where learners can participate in tutoring over any duration, how would you decide which pattern to use?", "choices": [{"cid": "c", "text": "I would analyze which design pattern matches users' needs when using a smartphone, using properties that are unique to a smartphone environment. One characteristic that the digital tool has is using algorithm to make proper pairs. For that reason, I would choose to use the \"Max-welfare\" pattern over the \"stable-pairing\" pattern."}, {"cid": "b", "text": "Choose the max-welfare pattern because max-welfare would choose the stable-matching pairing if that were indeed more optimal\u3002"}, {"cid": "d", "text": "Max-welfare, because people are flowing fast, you cannot tell who will still be here tomorrow, so it's hard to form stable patterns. Rather, pair people with max gain will be more beneficial."}, {"cid": "a", "text": "Since we are in online media, I would pick max-welfare. The reason is that if learners are not required to come to the same classroom by the same time, then it is very hard to ensure that learners in single pair are able to synchronise. Given that online media often assumes self-paced learning it might also be an issue (i.e. I decide to take vacation and my partner should wait till I return). In contrast, max-welfare makes decision for each session and can pick partner from those who are currently online which is very convenient."}], "correctChoice": ["a"], "correctFeedback": "Correct.", "incorrectFeedback": "Incorrect."}, {"qid": "Q6", "type": "multiple-choice", "questionText": "The \u201cStable-pairing\u201d design pattern suggests that when learners need to be paired for multiple peer tutoring sessions, for larger learning gains learners overall, they should be paired such that over long periods of time (e.g. a month), they have the same partner. The \u201cMax-welfare\u201d design pattern suggests that when learners need to be paired for peer-tutoring over multiple sessions, for maximizing the learning gain in each session they should be paired with the partner they are most likely to learn from in that session. If you\u2019re designing a peer tutoring iPhone app where learners can participate in tutoring over any duration, how would you decide which pattern to use?", "choices": [{"cid": "a", "text": "One option could be to differentiate the pairing algorithm based on the time frame for the use case. So if a given user signals that they need only a few sessions, we could use Max-Welfare, but if they will be going back again and again, we use Stable-Pairing"}, {"cid": "c", "text": "Since the app allows learners to participate in tutoring over any duration, Max-welfare would be more flexible."}, {"cid": "d", "text": "If we want the learner to have the max learning gain, then it's better to use \"Max-welfare\" because learners can experience diverse experience and empathy."}, {"cid": "b", "text": "Since design patterns don't provide a principle to guide us choosing better practices, I suggest trying the easier pattern to implement first (e.g. stable-pairing), then move to max-welfare if results are inadequate"}], "correctChoice": ["a"], "correctFeedback": "Correct.", "incorrectFeedback": "Incorrect."}]]